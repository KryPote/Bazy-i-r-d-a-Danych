create table DEPARTMENTS(department_id int primary key, department_name char not null, manager_id int, location_id int);
create table LOCATIONS(location_id int primary key, street_address char, postal_code char, city char, state_province char, country_id);

alter table DEPARTMENTS	ADD CONSTRAINT fk_location_id FOREIGN KEY (location_id) REFERENCES LOCATIONS(location_id);

create table JOB_HISTORY(employee_id int primary key, start_date date, end_date date, job_id int, department_id int);

alter table JOB_HISTORY ADD CONSTRAINT fk_department_id FOREIGN KEY (department_id) REFERENCES DEPARTMENTS(department_id);

create table JOBS(job_id int primary key, job_title char, min_salary int, max_salary int, CONSTRAINT min_max_salary CHECK('max_salary' >= 'min_salary'+2000));

alter table JOB_HISTORY ADD CONSTRAINT fk_job_id FOREIGN KEY (job_id) REFERENCES JOBS(job_id);

create table EMPLOYEES(employee_id int primary key, first_name char, last_name char, email char, phone_number int, hire_date date, job_id int, salary int, commission_pct float, manager_id int, department_id int);

alter table EMPLOYEES ADD CONSTRAINT fk_department_id2 FOREIGN KEY (department_id) REFERENCES DEPARTMENTS(department_id);
alter table EMPLOYEES ADD CONSTRAINT fk_job_id2 FOREIGN KEY (job_id) REFERENCES JOBS(job_id);

create table COUNTRIES(country_id int primary key, country_name char, region_id int);

alter table LOCATIONS ADD CONSTRAINT country_id FOREIGN KEY (country_id) REFERENCES COUNTRIES(country_id);

create table REGIONS(region_id int primary key, region_name char);

alter table COUNTRIES ADD CONSTRAINT region_id FOREIGN KEY (region_id) REFERENCES REGIONS(region_id);