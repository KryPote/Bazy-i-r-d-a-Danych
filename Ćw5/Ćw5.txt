Wyzwalacze:
1. 
CREATE TABLE archiwum_departamentów(dep_id int primary key, dep_name varchar(300), close_date date, last_manager varchar(300));

create or replace TRIGGER triggerpierwszy BEFORE DELETE ON DEPARTMENTS
FOR EACH ROW DECLARE
    emplo_name EMPLOYEES.FIRST_NAME%TYPE;
    emplo_last EMPLOYEES.LAST_NAME%TYPE;
    ost_menadzer archiwum_departamentów.last_manager%TYPE;


BEGIN
    SELECT EMPLOYEES.FIRST_NAME, EMPLOYEES.LAST_NAME into emplo_name, emplo_last FROM EMPLOYEES where EMPLOYEES.MANAGER_ID = :OLD.MANAGER_ID;
    INSERT INTO archiwum_departamentów(dep_id, dep_name, close_date, last_manager) values(:old.DEPARTMENT_ID, :old.DEPARTMENT_NAME, SYSTIMESTAMP, concat(concat(emplo_name, '_'), emplo_last));
    DBMS_OUTPUT.PUT_LINE('Zarchiwizowano');
end;

2.
CREATE TABLE z³odziej(ID_zlodzieja int primary key, user_zlodziej varchar(300), czas_zmiany date);

CREATE OR REPLACE TRIGGER triggerdrugi BEFORE INSERT OR UPDATE OF SALARY ON EMPLOYEES
DECLARE
    salary EMPLOYEES.SALARY%TYPE;

BEGIN
IF (salary <= 2000) OR (salary >= 26000) 
    THEN INSERT INTO z³odziej VALUES(1,USER,SYSDATE);
end if;
end;

3.

4.
CREATE OR REPLACE TRIGGER triggerczwarty BEFORE INSERT OR UPDATE OR DELETE ON JOB_GRADES
FOR EACH ROW DECLARE 
    event EXCEPTION;
BEGIN
    RAISE_APPLICATION_ERROR(-20500,'Zaprzestan');
end;

Funkcje:
1.

2.

3.

4. 
CREATE OR REPLACE FUNCTION funkcjacztery (wielka VARCHAR2)
    RETURN VARCHAR2 IS temp VARCHAR2(100);
BEGIN
    temp := UPPER(SUBSTR(wielka, 1,1)) || SUBSTR(wielka,1) || UPPER(SUBSTR(wielka,-1));
    return temp;
END;

5.
  
CREATE OR REPLACE FUNCTION funkcjapiec(PESEL VARCHAR2)
    RETURN DATE IS uro DATE;
BEGIN
    
    uro :=TO_DATE(SUBSTR(pesel,1,6),'yy-mm-dd');
    return uro;
END;

6.
CREATE OR REPLACE FUNCTION funkcjaszesc(nazwa_kraju VARCHAR2)
    RETURN NUMBER IS count_1 NUMBER;
BEGIN
    DECLARE
    lokacja LOCATIONS.COUNTRY_ID%TYPE;
    
    BEGIN
    SELECT LOCATION_ID into lokacja from LOCATIONS where COUNTRY_ID = nazwa_kraju;
    END;
END;